
#ORegAnno database has 6 fields "gene_symbol, strand, type, experimental_outcome, database_ID, NCBI"
#VEP output shows all the fields in one column
#To display information more clearly is necessary to split ORegAnno fields.
#Annotations with multiple ORegAnno entries should also be merged in the corresponding field

results/%.vep.ORegAnno.split.tsv: results/%.vep.ORegAnno.tsv
	set -x
        mkdir -p `dirname $target`
	##Print lines after matching pattern (sed), and add . to cells without ORegAnno annotation (awk)
	##awk: define delimiting charcater, replace - at the start and end of file, replace with . 6x, in the last column; remove [ORegAnno] last field
	sed -e '1,/#Uploaded_variation/d' $prereq | awk 'BEGIN {FS=OFS='\t'} {gsub(/^-$/,".,.,.,.,.,.",$NF)} 1 ' | sed 's/\[ORegAnno\]//g' > results/$stem.ORegAnno.NA.tmp.tsv
	##create header. Add "ORA" to ORegAnno database fields
	grep '#Uploaded_variation' $prereq | sed -e 's/ORegAnno/ORAgene_symbol\tORAstrand\tORAtype\tORAexperimental_outcome\tORAdatabase_ID\tORANCBI/g' > $target.build
	##This command works together with command above, but header line includes first data line.
	##Define comma as delimiting character, create a for loop to print the value of each database field in one new field.
	##i starts with 1 and adds 6, if value is largerthan number of fields adds a tab, otherwise adds a comma; same is repeated for the next fields
	awk -F, '{for(i=1;i<=NF;i+=6)printf "%s%s", $i, (i+6>=NF?"\t":FS)}; \
	{for(i=2;i<=NF;i+=6)printf "%s%s", $i, (i+6>NF?"\t":FS)}; \
	{for(i=3;i<=NF;i+=6)printf "%s%s", $i, (i+6>NF?"\t":FS)}; \
	{for(i=4;i<=NF;i+=6)printf "%s%s", $i, (i+6>NF?"\t":FS)}; \
	{for(i=5;i<=NF;i+=6)printf "%s%s", $i, (i+6>NF?"\t":FS)}; \
	{for(i=6;i<=NF;i+=6)printf "%s%s", $i, (i+6>NF?"\n":FS)}' results/$stem.ORegAnno.NA.tmp.tsv >> $target.build \
	&& mv $target.build $target

